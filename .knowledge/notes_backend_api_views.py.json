{"is_source_file": true, "format": "Python", "description": "This file defines API view functions for a notes backend, including health check, user registration, login, logout, and a placeholder for listing user notes. It uses Django REST Framework and JWT authentication.", "external_files": ["rest_framework.decorators", "rest_framework.response", "rest_framework", "django.contrib.auth", "django.contrib.auth.models", "rest_framework_simplejwt.tokens", "./models"], "external_methods": ["api_view", "permission_classes", "Response", "status", "permissions.AllowAny", "authenticate", "User", "RefreshToken.for_user", "RefreshToken"], "published": ["health", "register", "login", "logout", "notes_list"], "classes": [], "methods": [{"name": "health(request)", "description": "A GET endpoint that responds with a message indicating the server is operational.", "scope": "", "scopeKind": ""}, {"name": "register(request)", "description": "A POST endpoint to register a new user, returning user data if successful.", "scope": "", "scopeKind": ""}, {"name": "login(request)", "description": "A POST endpoint that authenticates user credentials and returns JWT tokens.", "scope": "", "scopeKind": ""}, {"name": "logout(request)", "description": "A POST endpoint that blacklists a given refresh token to log out a user.", "scope": "", "scopeKind": ""}, {"name": "notes_list(request)", "description": "A GET endpoint intended to list notes associated with the authenticated user, currently a placeholder.", "scope": "", "scopeKind": ""}], "calls": ["Response", "status", "authenticate", "UserSerializer", "UserSerializer(user).data", "RefreshToken.for_user", "RefreshToken", "RefreshToken(refresh_token)", "token.blacklist()"], "search-terms": ["api_view", "register", "login", "logout", "notes_list", "JWT", "token", "health check endpoint"], "state": 2, "file_id": 7, "knowledge_revision": 39, "git_revision": "2801cc368be6b58799522d736e5e09806f87f337", "revision_history": [{"27": "2801cc368be6b58799522d736e5e09806f87f337"}, {"39": "2801cc368be6b58799522d736e5e09806f87f337"}], "ctags": [{"_type": "tag", "name": "health", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-142459-142468/notes_backend/api/views.py", "pattern": "/^def health(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-142459-142468/notes_backend/api/views.py", "pattern": "/^def login(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "logout", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-142459-142468/notes_backend/api/views.py", "pattern": "/^def logout(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "notes_list", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-142459-142468/notes_backend/api/views.py", "pattern": "/^def notes_list(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-142459-142468/notes_backend/api/views.py", "pattern": "/^def register(request):$/", "language": "Python", "kind": "function", "signature": "(request)"}], "hash": "dff5a460bff63a6fe8d01cc74a54bcf5", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/api/views.py"}